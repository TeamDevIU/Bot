language: generic
stages:
  - name: test_vkbot
    if: branch = development
  - name: test_tgbot
    if: branch = development
  - name: test_mainserver
    if: branch = development
  - name: deploy
    if: branch = master

jobs:
  include:
    - stage: test_vkbot
      language: node_js
      node_js: 
          - "node"
      before_script:
      script: 
          - cd VkGroupBot;
          - npm install;
          - npm test;
          - grunt jshint;
          - cd ..;

    - stage: test_tgbot
      language: python
      before_script:
          - sudo add-apt-repository -y ppa:jonathonf/python-3.6
          - sudo apt-get update
          - sudo apt-get install python3.6 libpython3.6
          - wget https://bootstrap.pypa.io/get-pip.py
          - sudo python3.6 get-pip.py
          - cd TgBot
          - echo "DIALOG_FLOW_TOKEN = \"$DIALOG_FLOW_TOKEN\"" > config.py
          - sudo pip3.6 install -r requirements.txt 
          - cd ..
      script: 
          - cd TgBot
          - python3.6 -m unittest tests/*.py
          - cd ..

    - stage: test_mainserver
      services:
          - postgresql
      addons:
          postgresql: "9.6"
      before_script:
          - psql -c 'create database db_for_test;' -U postgres
          - psql -c "create user test_user with password 'password';" -U postgres
          - psql -c "GRANT ALL ON DATABASE db_for_test TO test_user;" -U postgres
          - wget https://storage.googleapis.com/golang/go1.9.3.linux-amd64.tar.gz
          - sudo tar -zxvf  go1.9.3.linux-amd64.tar.gz -C /usr/local/
          - export PATH=$PATH:/usr/local/go/bin
          - export GOPATH=$HOME
          - go version
          - cd main-server
          - go get github.com/gorilla/mux
          - go get github.com/lib/pq
          - cd ..
      script: 
          - cd main-server
          - go test
          - cd ..
    - stage: deploy
      before_script:
      script: 

